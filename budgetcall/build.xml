<!-- ====================================================================== 
     Date:     May 2013
     Project:  Struts 2 Form Budget call report
     Author:   V.Sokolov
     ====================================================================== -->


	
<project name="BudgetCall" default="dist" basedir=".">
	
    <description>
    	Budget call report based on Struts 2
    </description>
	
	<property file="build.properties"/>
	
	<property name="src.dir" value="${basedir}/src" />
	<property name="src.main.dir" value="${src.dir}/main" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="dist.dir" value="${basedir}/dist/" />
	<property name="dist.lib.dir" value="${dist.dir}/lib" />
    
	<path id="lib.class.path">
		   <fileset dir="${adempiere.home}/lib">
		      <include name="*.jar"/>
		   </fileset>
			<fileset dir="${lib.home}" />
	</path>

	<tstamp/>
	
	<!-- ==================== Clean Target ==================================== -->

	<!--
	  The "clean" target deletes any previous "build" and "dist" directory,
	  so that you can be ensured the application can be built from scratch.
	-->
	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${dist.home}"/>
		<delete dir="${build.home}"/>
	</target>

	<!-- ==================== Init Target ================================== -->

	<!--

	  The "init" target is used to create the "build" destination directory,
	  Normally, this task is executed indirectly when needed.

	-->
	<target name="init" depends="clean"  description="Create build directory">
		
		<mkdir dir="${build.home}" />

	</target>
	
	<!-- ==================== Compile Target ================================== -->

	<!--

	  The "compile" target transforms source files (from your "src" directory)
	  into class files in the appropriate location in the build directory.
	  This example assumes that you will be including your classes in an
	  unpacked directory hierarchy under "/WEB-INF/classes".

	-->
	<target name="compile" depends="init" description="Compile Java sources">
		
		
		<mkdir dir="${build.home}/WEB-INF/classes" />
		
		<javac srcdir="${src.main.dir}"
				destdir="${build.home}/WEB-INF/classes"  includeantruntime="false" encoding="UTF-8" 
				debug="${compile.debug}"	
				deprecation="${compile.deprecation}"
				optimize="${compile.optimize}"
				source="1.7" target="1.7">
			
			<classpath refid="lib.class.path"/>
			
		</javac>

	</target>
	
	<!-- ==================== Build Target ================================== -->

	<!--

	  The "build" target copies all non class files to build directory

	-->
	
	<target name="build" depends="compile" description="Copies all non Java classes to build directoy">
		<copy todir="${build.home}">
			<fileset dir="${webapp.home}" excludes="SVN,**/*.class" />
		</copy>
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${source.home}" excludes="SVN,**/*.java" />
		</copy>
	</target>
	
	<!-- ==================== Archive Target ================================== -->

	<!--

	  The "archive" target create a binary archive of all files in build.home

	-->

	<target name="dist" depends="build" description="Create binary archive of all files in dist.home">
		
		<mkdir     dir="${dist.home}" />
		
		<!-- Create application WAR file -->
	    <jar jarfile="${dist.home}/${app.name}.war"
				basedir="${build.home}">
		
			<manifest>
				<attribute name="Developer" value="${adempiere.developer}"/>
				<attribute name="Created" value="${TODAY} - time: ${TSTAMP}"/>
			</manifest>	
		</jar>

	</target>	

</project>

